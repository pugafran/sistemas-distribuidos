/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALCULADORA_H_RPCGEN
#define _CALCULADORA_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>


typedef char *Texto;
#ifdef __cplusplus
extern "C" bool_t xdr_Texto(XDR *, Texto*);
#elif __STDC__
extern  bool_t xdr_Texto(XDR *, Texto*);
#else /* Old Style C */
bool_t xdr_Texto();
#endif /* Old Style C */


struct Operandos {
	int op1;
	int op2;
};
typedef struct Operandos Operandos;
#ifdef __cplusplus
extern "C" bool_t xdr_Operandos(XDR *, Operandos*);
#elif __STDC__
extern  bool_t xdr_Operandos(XDR *, Operandos*);
#else /* Old Style C */
bool_t xdr_Operandos();
#endif /* Old Style C */


struct Resultado {
	int caso;
	union {
		int n;
		float x;
		Texto error;
	} Resultado_u;
};
typedef struct Resultado Resultado;
#ifdef __cplusplus
extern "C" bool_t xdr_Resultado(XDR *, Resultado*);
#elif __STDC__
extern  bool_t xdr_Resultado(XDR *, Resultado*);
#else /* Old Style C */
bool_t xdr_Resultado();
#endif /* Old Style C */


#define CALCULADORA ((rpc_uint)0x40001234)
#define BASICA ((rpc_uint)1)

#ifdef __cplusplus
#define sumar ((rpc_uint)1)
extern "C" int * sumar_1(Operandos *, CLIENT *);
extern "C" int * sumar_1_svc(Operandos *, struct svc_req *);
#define restar ((rpc_uint)2)
extern "C" int * restar_1(Operandos *, CLIENT *);
extern "C" int * restar_1_svc(Operandos *, struct svc_req *);
#define multiplicar ((rpc_uint)3)
extern "C" int * multiplicar_1(Operandos *, CLIENT *);
extern "C" int * multiplicar_1_svc(Operandos *, struct svc_req *);
#define dividir ((rpc_uint)4)
extern "C" Resultado * dividir_1(Operandos *, CLIENT *);
extern "C" Resultado * dividir_1_svc(Operandos *, struct svc_req *);

#elif __STDC__
#define sumar ((rpc_uint)1)
extern  int * sumar_1(Operandos *, CLIENT *);
extern  int * sumar_1_svc(Operandos *, struct svc_req *);
#define restar ((rpc_uint)2)
extern  int * restar_1(Operandos *, CLIENT *);
extern  int * restar_1_svc(Operandos *, struct svc_req *);
#define multiplicar ((rpc_uint)3)
extern  int * multiplicar_1(Operandos *, CLIENT *);
extern  int * multiplicar_1_svc(Operandos *, struct svc_req *);
#define dividir ((rpc_uint)4)
extern  Resultado * dividir_1(Operandos *, CLIENT *);
extern  Resultado * dividir_1_svc(Operandos *, struct svc_req *);

#else /* Old Style C */
#define sumar ((rpc_uint)1)
extern  int * sumar_1();
extern  int * sumar_1_svc();
#define restar ((rpc_uint)2)
extern  int * restar_1();
extern  int * restar_1_svc();
#define multiplicar ((rpc_uint)3)
extern  int * multiplicar_1();
extern  int * multiplicar_1_svc();
#define dividir ((rpc_uint)4)
extern  Resultado * dividir_1();
extern  Resultado * dividir_1_svc();
#endif /* Old Style C */

#endif /* !_CALCULADORA_H_RPCGEN */
